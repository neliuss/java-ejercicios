/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import clases.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
//todos esos pueden ser java.sql.*
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


public class Hospital extends javax.swing.JFrame {

    /**
     * Creates new form Hospital
     */
    Connection connection=null;

    public Hospital() {
        initComponents();
        setLocationRelativeTo(null);
        
        connection=Conexion.getConexion();
        if (connection!=null)
        {
        mostrarPersonasTabla();
        mostrarOperacionesTabla();
        mostrarQuirofanosTabla();
        }
        else
            JOptionPane.showMessageDialog(null, "Error al conectar", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersonas = new javax.swing.JTable();
        Buscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableOperaciones = new javax.swing.JTable();
        jPanelOperaciones = new javax.swing.JPanel();
        jLabelCodigo = new javax.swing.JLabel();
        jLabelDescripcion = new javax.swing.JLabel();
        jLabelFecha = new javax.swing.JLabel();
        jLabelTipo = new javax.swing.JLabel();
        jLabelDNI = new javax.swing.JLabel();
        jLabelCodQuirofano = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldDescripcion = new javax.swing.JTextField();
        jTextFieldTipo = new javax.swing.JTextField();
        jComboBoxDNI = new javax.swing.JComboBox<>();
        jComboBoxCodQuirofano = new javax.swing.JComboBox<>();
        jButtonInsertar = new javax.swing.JButton();
        jDateChooserFecha = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableQuirofanos = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabelCodigoQuirofano = new javax.swing.JLabel();
        jLabelDescQuirofano = new javax.swing.JLabel();
        jLabelPlanta = new javax.swing.JLabel();
        jButtonModificar = new javax.swing.JButton();
        jButtonBorrar = new javax.swing.JButton();
        jTextFieldCodigoQuirofano = new javax.swing.JTextField();
        jTextFieldDescQuirofano = new javax.swing.JTextField();
        jTextFieldPlanta = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTablePersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "NOMBRE", "APELLIDOS", "DIRECCION", "FECHA NACIMIENTO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePersonas);

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Apellido");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(Buscar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(Buscar)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("personas", jPanel2);

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        jTableOperaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descripción", "Fecha", "Tipo", "DNI", "Código quirófano"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableOperaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableOperacionesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableOperaciones);

        jLabelCodigo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelCodigo.setText("Código:");

        jLabelDescripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelDescripcion.setText("Descripción:");

        jLabelFecha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelFecha.setText("Fecha:");

        jLabelTipo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelTipo.setText("Tipo:");

        jLabelDNI.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelDNI.setText("DNI:");

        jLabelCodQuirofano.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelCodQuirofano.setText("Código quirófano");

        jButtonInsertar.setText("Añadir Operación");
        jButtonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOperacionesLayout = new javax.swing.GroupLayout(jPanelOperaciones);
        jPanelOperaciones.setLayout(jPanelOperacionesLayout);
        jPanelOperacionesLayout.setHorizontalGroup(
            jPanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperacionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOperacionesLayout.createSequentialGroup()
                        .addComponent(jLabelCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(554, 554, 554))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOperacionesLayout.createSequentialGroup()
                        .addGroup(jPanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelFecha)
                            .addComponent(jLabelDescripcion)
                            .addComponent(jLabelTipo)
                            .addComponent(jLabelCodQuirofano)
                            .addComponent(jLabelDNI))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldDescripcion)
                            .addComponent(jTextFieldTipo, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jComboBoxCodQuirofano, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxDNI, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonInsertar)
                            .addComponent(jDateChooserFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(474, 474, 474))))
        );
        jPanelOperacionesLayout.setVerticalGroup(
            jPanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCodigo)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDescripcion)
                    .addComponent(jTextFieldDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelFecha)
                    .addComponent(jDateChooserFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTipo)
                    .addComponent(jTextFieldTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDNI)
                    .addComponent(jComboBoxDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCodQuirofano)
                    .addComponent(jComboBoxCodQuirofano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jButtonInsertar))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addComponent(jPanelOperaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelOperaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        jTabbedPane2.addTab("operaciones", jPanel3);

        jTableQuirofanos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descripción", "Planta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableQuirofanos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableQuirofanosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableQuirofanos);

        jLabelCodigoQuirofano.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelCodigoQuirofano.setText("Código:");

        jLabelDescQuirofano.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelDescQuirofano.setText("Descripción:");

        jLabelPlanta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelPlanta.setText("Planta:");

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonBorrar.setText("Borrar");
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelDescQuirofano)
                            .addComponent(jLabelCodigoQuirofano)
                            .addComponent(jLabelPlanta))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jTextFieldCodigoQuirofano, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 76, Short.MAX_VALUE))
                            .addComponent(jTextFieldDescQuirofano)
                            .addComponent(jTextFieldPlanta)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jButtonModificar)
                        .addGap(38, 38, 38)
                        .addComponent(jButtonBorrar)))
                .addContainerGap(231, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCodigoQuirofano)
                    .addComponent(jTextFieldCodigoQuirofano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDescQuirofano)
                    .addComponent(jTextFieldDescQuirofano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPlanta)
                    .addComponent(jTextFieldPlanta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonBorrar))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("quirofanos", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     public ArrayList<Persona> getListaPersonas() {
        ArrayList<Persona> listaPersonas = new ArrayList<>();
      
        
        String query = "SELECT * FROM personas";
           
        try {
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery(query);
            jComboBoxDNI.removeAllItems();
            jComboBoxDNI.addItem("Selecciona el DNI de la persona");
            Persona persona;
            while (rs.next()) { //dni nombre apellidos direccion fecha_naci
                persona = new Persona(rs.getString("dni"), rs.getString("nombre"), rs.getString("apellidos"),
                        rs.getString("direccion"), rs.getString("fecha_naci"));
                jComboBoxDNI.addItem(rs.getString("dni"));
                listaPersonas.add(persona);
                   
                   }
            st.close();
            rs.close();
        } catch (SQLException e) {
            System.out.println(e);
        }

        return listaPersonas;
    }
    
    public void mostrarPersonasTabla() {
        ArrayList<Persona> listaPersonas = getListaPersonas();
        DefaultTableModel modelo = (DefaultTableModel) jTablePersonas.getModel();
        
        modelo.setRowCount(0);
        Object col[] = new Object[5];
        
        for (int i = 0; i < listaPersonas.size(); i++) {
            col[0] = listaPersonas.get(i).getDni();
            col[1] = listaPersonas.get(i).getNombre();
            col[2] = listaPersonas.get(i).getApellidos();
            col[3] = listaPersonas.get(i).getDireccion();
            col[4] = listaPersonas.get(i).getFecha_naci();
            
            modelo.addRow(col);
        }
    }
       public ArrayList<Operacion> getListaOperaciones() {
        ArrayList<Operacion> listaOperaciones = new ArrayList<>();
       
        String query = "SELECT * FROM operaciones";
        Statement st;
        ResultSet rs;
        
        try {
            st = connection.createStatement();
            rs = st.executeQuery(query);
            Operacion operacion;
            
            
                    
            while (rs.next()) {
                    operacion = new Operacion(rs.getString("cod_operacion"), rs.getString("descripcion"), 
                    rs.getObject ( "fecha", LocalDate.class ), //indico la clase                
                    //rs.getObject ( 3, LocalDate.class ); puede ser por posición o por nombre
                    rs.getString("tipo"), rs.getString("dni"), rs.getString("cod_quirofano"));
                listaOperaciones.add(operacion);
            }
            st.close();
            rs.close();   
        
        } catch (SQLException e) {
            System.out.println(e);
        }
        return listaOperaciones;
    }
 public void mostrarOperacionesTabla() {
        ArrayList<Operacion> listaOperaciones = getListaOperaciones();
        DefaultTableModel modelo = (DefaultTableModel) jTableOperaciones.getModel();
       
        modelo.setRowCount(0); //ponemos a cero las filas 
        Object col[] = new Object[6];
        
        for (int i = 0; i < listaOperaciones.size(); i++) {
            col[0] = listaOperaciones.get(i).getCod_operacion();
            col[1] = listaOperaciones.get(i).getDescripcion();
            col[2] = listaOperaciones.get(i).getFecha();
            col[3] = listaOperaciones.get(i).getTipo();
            col[4] = listaOperaciones.get(i).getDni();
            col[5] = listaOperaciones.get(i).getCod_quirofano();
            
            modelo.addRow(col);
        }
    }
   public void mostrarQuirofanosTabla() {
        ArrayList<Quirofano> listaQuirofanos = getListaQuirofanos();
        DefaultTableModel modelo = (DefaultTableModel) jTableQuirofanos.getModel();
        
        modelo.setRowCount(0);
        Object col[] = new Object[3];
        
        for (int i = 0; i < listaQuirofanos.size(); i++) {
            col[0] = listaQuirofanos.get(i).getCod_quirofano();
            col[1] = listaQuirofanos.get(i).getDescripcion();
            col[2] = listaQuirofanos.get(i).getPlanta();
            
            modelo.addRow(col);
        }
    }
       public ArrayList<Quirofano> getListaQuirofanos() {
        ArrayList<Quirofano> listaQuirofanos = new ArrayList<>();
      
        
        String query = "SELECT * FROM quirofanos";
        Statement st;
        ResultSet rs;
        
        try {
            st = connection.createStatement();
            rs = st.executeQuery(query);
            jComboBoxCodQuirofano.removeAllItems();
            jComboBoxCodQuirofano.addItem("Selecciona el código de quirófano");
            Quirofano quirofano;
            while (rs.next()) { //dni nombre apellidos direccion fecha_naci
                quirofano = new Quirofano(rs.getString("cod_quirofano"), rs.getString("descripcion"), rs.getString("planta"));
                jComboBoxCodQuirofano.addItem(rs.getString("cod_quirofano")); 
                //aprovechamos para ir rellenando el combo
                listaQuirofanos.add(quirofano);
            }
            st.close();
            rs.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
        return listaQuirofanos;
    }
    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed

        try{
            //De esta forma si quisiésemos ponerle el nombre a las columnas:
            //  String buscarPrepared="select dni as 'DNI', nombre as 'NOMBRE', apellidos as 'APELLIDOS', direccion as 'DIRECCION', fecha_naci as 'FECHA NACIMIENTO' from personas where apellidos LIKE ?";
            String buscarPrepared="select * from personas where apellidos LIKE ?";
            PreparedStatement psB = connection.prepareStatement(buscarPrepared);

            psB.setString (1,jTextField1.getText()+"%");
          
            //Aquí guardamos el resultado de la consulta
            ResultSet resultadoB=psB.executeQuery();//Crea tabla virtual, el resultset

            ResultSetMetaData resulMetaData = resultadoB.getMetaData(); //encabezado columna
            int col=resulMetaData.getColumnCount();//Contamos nº de columnas
            DefaultTableModel tablaPersonasB = new DefaultTableModel();

            //De esta forma nos pone el nombre de las columnas igual al de la tabla:
            for (int i=1;i<=col;i++){
                tablaPersonasB.addColumn(resulMetaData.getColumnLabel(i));
            }
            while(resultadoB.next()){
                String fila []=new String [col];
                for(int j=0;j<col;j++){
                    fila[j]=resultadoB.getString(j+1);
                }
                tablaPersonasB.addRow(fila);
            }

            jTablePersonas.setModel(tablaPersonasB);
            psB.close();
            resultadoB.close();
        }catch (SQLException e){

            System.out.println("Fallo al conectar");
        }
//se podría usar algo como:    
// DaoPersonas.buscar_personas(connection,jTextField1.getText());
    }//GEN-LAST:event_BuscarActionPerformed

    private void jTableOperacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableOperacionesMouseClicked
        //al pinchar en la tabla y sobre la fecha me aparece en el DateChooser el valor actual
        Calendar calendario=Calendar.getInstance();
        SimpleDateFormat formato=new SimpleDateFormat("yyyy-MM-dd");
        try{
            String cadena=jTableOperaciones.getValueAt(jTableOperaciones.getSelectedRow(), jTableOperaciones.getSelectedColumn()).toString();
            calendario.setTime(formato.parse(cadena));
            jDateChooserFecha.setDate(calendario.getTime());
        }
        catch(Exception e)
        {}
    }//GEN-LAST:event_jTableOperacionesMouseClicked

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked

    }//GEN-LAST:event_jScrollPane2MouseClicked
 public boolean comprobarCajasOperaciones() {
        if (jTextFieldCodigo.getText().isEmpty() || jTextFieldDescripcion.getText().isEmpty() ||
            jDateChooserFecha.getDate() == null || jTextFieldTipo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Uno o más campos están vacíos o son incorrectos", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (jComboBoxDNI.getSelectedItem().equals("Selecciona el DNI de la persona")) {
            JOptionPane.showMessageDialog(null, "Selecciona un ID para la persona", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (jComboBoxCodQuirofano.getSelectedItem().equals("Selecciona el código de quirófano")) {
            JOptionPane.showMessageDialog(null, "Selecciona el código de quirófano", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
  public boolean comprobarCajasQuirofanos() {
        if (jTextFieldCodigoQuirofano.getText().isEmpty() || jTextFieldDescQuirofano.getText().isEmpty() ||
                jTextFieldPlanta.getText().isEmpty()) 
            return false;
        else return true;
    }
  public void limpiarCajasOperaciones() {
        jTextFieldCodigo.setText("");
        jTextFieldDescripcion.setText("");
        jDateChooserFecha.setCalendar(null);
        jTextFieldTipo.setText("");
        jComboBoxDNI.setSelectedIndex(0);
        jComboBoxCodQuirofano.setSelectedIndex(0);
    }
   public void limpiarCajasQuirofanos() {
        jTextFieldCodigoQuirofano.setText(null); //con null o con ""
        jTextFieldDescQuirofano.setText(null);
        jTextFieldPlanta.setText(null);
    }
    private void jButtonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarActionPerformed
        // TODO add your handling code here:
        try {
            String consulta = "INSERT INTO operaciones (cod_operacion, descripcion, fecha, tipo, dni, cod_quirofano) VALUES (?,?,?,?,?,?)";
            PreparedStatement ps = connection.prepareStatement(consulta);

            if (comprobarCajasOperaciones()) {
                ps.setString(1, jTextFieldCodigo.getText());
                ps.setString(2, jTextFieldDescripcion.getText());
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String addDate = dateFormat.format(jDateChooserFecha.getDate());
               //ps.setString(3, addDate);
                //una forma de guardar la fecha tomándola como String o como tipo fecha, 
                //en el segundo caso hay que utilizar java.sql.Date para cambiar de tipo Date a sql.date 
                ps.setDate(3, java.sql.Date.valueOf(addDate));
                ps.setString(4, jTextFieldTipo.getText());
                ps.setString(5, (String) jComboBoxDNI.getSelectedItem());
                ps.setString(6, (String) jComboBoxCodQuirofano.getSelectedItem());
                ps.executeUpdate();
                
                mostrarOperacionesTabla();
                JOptionPane.showMessageDialog(null, "Operación insertada");
                limpiarCajasOperaciones();
            }
            ps.close();
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Error al insertar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonInsertarActionPerformed

    private void jTableQuirofanosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableQuirofanosMouseClicked
        // TODO add your handling code here:
        int i = jTableQuirofanos.getSelectedRow();
        TableModel modelo = jTableQuirofanos.getModel();
        jTextFieldCodigoQuirofano.setText(modelo.getValueAt(i, 0).toString());
        jTextFieldDescQuirofano.setText(modelo.getValueAt(i, 1).toString());
        jTextFieldPlanta.setText(modelo.getValueAt(i, 2).toString());
    }//GEN-LAST:event_jTableQuirofanosMouseClicked

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        // TODO add your handling code here:
        if (comprobarCajasQuirofanos() && !jTextFieldCodigoQuirofano.getText().equals("")) {
            try {
                String consulta = "UPDATE quirofanos SET cod_quirofano=?, descripcion=?, planta=? WHERE cod_quirofano=?";
                PreparedStatement ps = connection.prepareStatement(consulta);

                ps.setString(1, jTextFieldCodigoQuirofano.getText());
                ps.setString(2, jTextFieldDescQuirofano.getText());
                ps.setString(3, jTextFieldPlanta.getText());
                ps.setString(4, jTextFieldCodigoQuirofano.getText());
                ps.executeUpdate();

                mostrarQuirofanosTabla();
                JOptionPane.showMessageDialog(null, "Quirófano actualizado");
                limpiarCajasQuirofanos();
                ps.close();
            } catch (SQLException e) {

                JOptionPane.showMessageDialog(null, "Quirófano no actualizado", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Uno o más campos están vacíos o son incorrectos", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
        if (!jTextFieldCodigoQuirofano.getText().equals("")) {
            try {
                String consulta = "DELETE FROM quirofanos WHERE cod_quirofano = ?";
                PreparedStatement ps = connection.prepareStatement(consulta);
                int id = Integer.parseInt(jTextFieldCodigoQuirofano.getText());
                ps.setInt(1, id);
                ps.executeUpdate();
 
                mostrarQuirofanosTabla();
                JOptionPane.showMessageDialog(null, "Quirófano eliminado");
                limpiarCajasQuirofanos();
                ps.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Quirófano no eliminado", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Quirófano no eliminado : No hay CÓDIGO para borrar", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonBorrarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Conexion.cerrar_conexion();
                  
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hospital().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonInsertar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JComboBox<String> jComboBoxCodQuirofano;
    private javax.swing.JComboBox<String> jComboBoxDNI;
    private com.toedter.calendar.JDateChooser jDateChooserFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCodQuirofano;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelCodigoQuirofano;
    private javax.swing.JLabel jLabelDNI;
    private javax.swing.JLabel jLabelDescQuirofano;
    private javax.swing.JLabel jLabelDescripcion;
    private javax.swing.JLabel jLabelFecha;
    private javax.swing.JLabel jLabelPlanta;
    private javax.swing.JLabel jLabelTipo;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelOperaciones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTableOperaciones;
    private javax.swing.JTable jTablePersonas;
    private javax.swing.JTable jTableQuirofanos;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldCodigoQuirofano;
    private javax.swing.JTextField jTextFieldDescQuirofano;
    private javax.swing.JTextField jTextFieldDescripcion;
    private javax.swing.JTextField jTextFieldPlanta;
    private javax.swing.JTextField jTextFieldTipo;
    // End of variables declaration//GEN-END:variables
}
